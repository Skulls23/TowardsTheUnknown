utiliser un tableau de case

d = (0, 0)
f = (3, 1)
etape

if(vector3.distance(d.x+1, f.x) < vector3.distance(d.x-1, f.x) && vector3.distance(d.x+1, f.x) != -1 && case[d.x-1, f.x])  
    etape = Vector3(d.x+1, d.y)
else if(vector3.distance(d.x+1, f.x) > vector3.distance(d.x-1, f.x) && vector3.distance(d.x-1, f.x) != -1)
    etape = vector3(d.x-1, d.y)
else if(vector3.distance(d.y+1, f.y) < vector3.distance(d.y-1, f.y) && vector3.distance(d.y+1, f.y) != -1)
    etape = Vector3(d.x, d.y+1)
else if(vector3.distance(d.y+1, f.y) > vector3.distance(d.y-1, f.y) && vector3.distance(d.y-1, f.y) != -1)
    etape = vector3(d.x, d.y+1)
else 
    Log("on y est")


3-1
3+1



4, 5
0, 6

(4+1)-0 = 5
(4-1)-0 = 3  correct

on passe donc a 3, 5

(3+1)-0 = 4
(3-1)-0 = 2  correct

on passe donc a 2, 5 ...



Faisons avec y

(5+1)-5 = 1  correct
(5-1)-5 = -1

on passe donc a 2,6

On doit donc prendre le numero le plus petit mais qui reste positif

